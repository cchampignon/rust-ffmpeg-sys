diff --git a/libavformat/rtpdec.c b/libavformat/rtpdec.c
index 51feeea..07048ff 100644
--- a/libavformat/rtpdec.c
+++ b/libavformat/rtpdec.c
@@ -150,29 +150,33 @@ static int rtcp_parse_packet(RTPDemuxContext *s, const unsigned char *buf,
                              int len)
 {
     int payload_len;
+    int rtcp_version;
     while (len >= 4) {
         payload_len = FFMIN(len, (AV_RB16(buf + 2) + 1) * 4);
+        rtcp_version = buf[0] >> 6;
+
+        if (rtcp_version == 2) {
+            switch (buf[1]) {
+            case RTCP_SR:
+                if (payload_len < 20) {
+                    av_log(s->ic, AV_LOG_ERROR, "Invalid RTCP SR packet length\n");
+                    return AVERROR_INVALIDDATA;
+                }
+
+                s->last_rtcp_reception_time = av_gettime_relative();
+                s->last_rtcp_ntp_time  = AV_RB64(buf + 8);
+                s->last_rtcp_timestamp = AV_RB32(buf + 16);
+                if (s->first_rtcp_ntp_time == AV_NOPTS_VALUE) {
+                    s->first_rtcp_ntp_time = s->last_rtcp_ntp_time;
+                    if (!s->base_timestamp)
+                        s->base_timestamp = s->last_rtcp_timestamp;
+                    s->rtcp_ts_offset = (int32_t)(s->last_rtcp_timestamp - s->base_timestamp);
+                }
 
-        switch (buf[1]) {
-        case RTCP_SR:
-            if (payload_len < 20) {
-                av_log(s->ic, AV_LOG_ERROR, "Invalid RTCP SR packet length\n");
-                return AVERROR_INVALIDDATA;
-            }
-
-            s->last_rtcp_reception_time = av_gettime_relative();
-            s->last_rtcp_ntp_time  = AV_RB64(buf + 8);
-            s->last_rtcp_timestamp = AV_RB32(buf + 16);
-            if (s->first_rtcp_ntp_time == AV_NOPTS_VALUE) {
-                s->first_rtcp_ntp_time = s->last_rtcp_ntp_time;
-                if (!s->base_timestamp)
-                    s->base_timestamp = s->last_rtcp_timestamp;
-                s->rtcp_ts_offset = (int32_t)(s->last_rtcp_timestamp - s->base_timestamp);
+                break;
+            case RTCP_BYE:
+                return -RTCP_BYE;
             }
-
-            break;
-        case RTCP_BYE:
-            return -RTCP_BYE;
         }
 
         buf += payload_len;
